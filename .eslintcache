[{"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\index.js":"1","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\App.js":"2","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\NavBar.js":"3","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\CartWidget.js":"4","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\ItemListContainer.js":"5","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\ItemList.js":"6","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\Item.js":"7","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\ItemDetailContainer.js":"8","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\ItemDetail.js":"9","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\Spinner.js":"10","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\itemCount.js":"11","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\CartContext.js":"12","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\Cart.js":"13","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\CartItem.js":"14","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\firebase.js":"15","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\OrderForm.js":"16","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\orderTable.js":"17","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\NEProduct.js":"18"},{"size":222,"mtime":1610459465716,"results":"19","hashOfConfig":"20"},{"size":1872,"mtime":1613360805914,"results":"21","hashOfConfig":"20"},{"size":1454,"mtime":1613286543738,"results":"22","hashOfConfig":"20"},{"size":1107,"mtime":1613286606537,"results":"23","hashOfConfig":"20"},{"size":1353,"mtime":1613288854099,"results":"24","hashOfConfig":"20"},{"size":421,"mtime":1613351300901,"results":"25","hashOfConfig":"20"},{"size":2905,"mtime":1613359632111,"results":"26","hashOfConfig":"20"},{"size":1477,"mtime":1613485851642,"results":"27","hashOfConfig":"20"},{"size":3654,"mtime":1613361921372,"results":"28","hashOfConfig":"20"},{"size":272,"mtime":1610485946069,"results":"29","hashOfConfig":"20"},{"size":2549,"mtime":1613109631461,"results":"30","hashOfConfig":"20"},{"size":2100,"mtime":1613292460598,"results":"31","hashOfConfig":"20"},{"size":3485,"mtime":1613361400402,"results":"32","hashOfConfig":"20"},{"size":797,"mtime":1611581036637,"results":"33","hashOfConfig":"20"},{"size":543,"mtime":1611854174329,"results":"34","hashOfConfig":"20"},{"size":8320,"mtime":1613356525229,"results":"35","hashOfConfig":"20"},{"size":1948,"mtime":1613296486959,"results":"36","hashOfConfig":"20"},{"size":1121,"mtime":1613485995594,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ud4gxk",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\index.js",[],["77","78"],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\App.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\NavBar.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\CartWidget.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\ItemListContainer.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\ItemList.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\Item.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\ItemDetailContainer.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\ItemDetail.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\Spinner.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\itemCount.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\CartContext.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\Cart.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\CartItem.js",[],["79","80"],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\firebase.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\OrderForm.js",["81"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// dsp vemos \r\n/* const ValidationMessage = props => {\r\n    if(!props.valid) {\r\n        return(\r\n        <div className=\"alert-danger\" role=\"alert\">{props.message}</div>\r\n        )\r\n    }\r\n    return null;\r\n} */\r\n\r\nconst OrderForm = ({fnes}) => {\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [emailConfirm, setEmailConfirm] =useState('')\r\n    const [errorMsg, setErrorMsg] = useState({})\r\n\r\n    const [firstNameValid, setFirstNameValid] = useState(false)\r\n    const [phoneValid, setPhoneValid] = useState(false)\r\n    const [emailValid, setEmailValid] = useState(false)\r\n    const [emailConfirmValid, setEmailConfirmValid] = useState(false)\r\n    //const [formValid, setFormValid] = useState()\r\n    \r\n    // fn para validar el formulario completo\r\n    /*  const validateForm = () => {\r\n\r\n        setFormValid(firstNameValid && phoneValid && emailValid && emailConfirmValid)\r\n        \r\n    }\r\n     */\r\n\r\n    // fn para validad firstName\r\n    const validateFirstName = (firstNameInput) => {\r\n        \r\n        let firstNameOK = true;\r\n\r\n        if (firstNameInput.length < 6 || firstNameInput.length > 15) {\r\n            firstNameOK = false;\r\n            setErrorMsg({...errorMsg, firstName: \"Nombre debe tener entre 6 y 15 caracteres\"})\r\n            console.log(errorMsg)\r\n        }\r\n\r\n        fnes.setName(firstNameInput)\r\n        setFirstNameValid(firstNameOK) \r\n         \r\n        //this.setState({usernameValid, errorMsg}, this.validateForm);\r\n    }\r\n\r\n        // fn para validad el celular\r\n        const validatePhone = (phoneInput) => {\r\n\r\n            let phoneOK = true;\r\n    \r\n            if (!/^[\\d]{2}[-]*([\\d]{4}[-]*){2}$/.test(phoneInput)) {\r\n                phoneOK = false;\r\n                setErrorMsg({...errorMsg, phone: \"Formato de teléfono celular no válido. Formato: xx-xxxx-xxxx\"})\r\n            }\r\n            \r\n            fnes.setPhone(phoneInput)\r\n            setPhoneValid(phoneOK)\r\n            //this.setState({emailValid, errorMsg}, this.validateForm);\r\n        }\r\n\r\n    // fn para validad el email\r\n    const validateEmail = (emailInput) => {\r\n\r\n        let emailOK = true;\r\n\r\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(emailInput)) {\r\n            emailOK = false;\r\n            setErrorMsg({...errorMsg, email: \"Formato de email incorrecto\"})\r\n        }\r\n\r\n        setEmailValid(emailOK)\r\n        //this.setState({emailValid, errorMsg}, this.validateForm);\r\n    }\r\n\r\n    // fn para validad que los emails ingresados coincidan\r\n    const validateEmailConfirm = (email2Input) => {\r\n\r\n        let emailConfirmOK = true;\r\n\r\n        if (email !== email2Input) {\r\n            emailConfirmOK = false;\r\n            setErrorMsg({...errorMsg, emailConfirm: \"Los emails ingresados no coinciden\"})\r\n        }\r\n\r\n        fnes.setEmail(email2Input)\r\n        setEmailConfirmValid(emailConfirmOK)\r\n        //this.setState({ passwordConfirmValid, errorMsg}, this.validateForm);\r\n    }\r\n\r\n    // fn para limpiar el formulario\r\n    const resetForm = (evt) => {\r\n        evt.preventDefault()\r\n        setFirstName('')\r\n        setPhone('')\r\n        setEmail('')\r\n        setEmailConfirm('')\r\n        setFirstNameValid(false)\r\n        setPhoneValid(false)\r\n        setEmailValid(false)\r\n        setEmailConfirmValid(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form >\r\n                {console.log('testeando ' + firstNameValid && phoneValid && emailValid && emailConfirmValid)}\r\n                <div className=\"flex justify-center mt-4 \">\r\n                    <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 flex flex-col\">\r\n                        {/* firstName */}\r\n                        <div className=\"mb-4\">\r\n                            <label htmlFor=\"nombre\" className=\"block text-grey-darker text-sm font-bold mb-2\">Nombre</label>\r\n                            <input type=\"text\" className=\"shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker\" id=\"nombre\" value={firstName}\r\n                                onChange={ evt => { setFirstName(evt.target.value)\r\n                                                    validateFirstName(evt.target.value) }\r\n                                }/>\r\n                            { !(firstNameValid) ? <span className=\"text-sm font-semibold text-red-600\"> {errorMsg.firstName} </span> : <></>}\r\n                        </div>\r\n                        {/* phone */}\r\n                        <div className=\"mb-4\">\r\n                            <label htmlFor=\"telefono\" className=\"block text-grey-darker text-sm font-bold mb-2\">Celular</label>\r\n                            <input type=\"tel\" className=\"shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker\" id=\"telefono\" value={phone}\r\n                                onChange={ evt => { setPhone(evt.target.value)\r\n                                                    validatePhone(evt.target.value) }\r\n                                }/>\r\n                           { !(phoneValid) ? <span className=\"text-sm font-semibold text-red-600\"> {errorMsg.phone} </span> : <></>}\r\n                        </div>\r\n                        {/* email */}\r\n                        <div className=\"mb-4\">\r\n                            <label htmlFor=\"correo\" className=\"block text-grey-darker text-sm font-bold mb-2\">Email</label>\r\n                            <input type=\"email\" className=\"shadow appearance-none border border-red rounded w-full py-2 px-3 text-grey-darker mb-3\" id=\"correo\" value={email}\r\n                                onChange={ evt => { setEmail(evt.target.value)\r\n                                                    validateEmail(evt.target.value) }\r\n                                }/>\r\n                            { !(emailValid) ? <span className=\"text-sm font-semibold text-red-600\"> {errorMsg.email} </span> : <></>}\r\n                        </div>\r\n                        {/* confirm email */}\r\n                        <div className=\"mb-4\">\r\n                            <label htmlFor=\"correo2\" className=\"block text-grey-darker text-sm font-bold mb-2\">Confirmar email</label>\r\n                            <input type=\"email\" className=\"shadow appearance-none border border-red rounded w-full py-2 px-3 text-grey-darker mb-3\" id=\"correo2\" value={emailConfirm}\r\n                                onChange={ evt => { setEmailConfirm(evt.target.value)\r\n                                                    validateEmailConfirm(evt.target.value)}\r\n                                }/>\r\n                            { !(emailConfirmValid) ? <span className=\"text-sm font-semibold text-red-600\"> {errorMsg.emailConfirm} </span> : <></>}\r\n                        </div>\r\n                        \r\n                        {/* buttons */}\r\n                        <div className=\"flex  \">\r\n                            <Link to=\"/\" >       \r\n                                <button type=\"submit\" disabled={!(firstNameValid && phoneValid && emailValid && emailConfirmValid)} className={ !(firstNameValid && phoneValid && emailValid && emailConfirmValid) ? \"btn1\" : \"btn2\"} \r\n                                        onClick={() => {\r\n                                            fnes.submitOrder()\r\n                                        }} >\r\n                                  Click aquí para terminar !\r\n                                </button>\r\n                            </Link>\r\n                            <button className=\"py-2 px-4 ml-2 rounded font-bold text-gray-800 border-2 border-gray-800 hover:text-white hover:shadow-md hover:bg-gray-800 hover:border-gray-800  transition-all ease-out duration-500 inline-flex items-center\" \r\n                                        onClick={resetForm} >\r\n                                  Resetear \r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default OrderForm\r\n\r\n\r\n// py-2 px-4 rounded text-pink-400 font-bold  border-2 border-pink-400 hover:text-white hover:bg-pink-400 hover:shadow-md transition-all ease-out duration-500 inline-flex items-center","C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\orderTable.js",[],"C:\\Users\\Carlos\\Desktop\\eCommerce-CH\\my-project\\src\\components\\NEProduct.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],["92"],["93"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]